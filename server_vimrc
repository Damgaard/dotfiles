" Vim Configuration file for
"
" Andreas Damgaard Pedersen
" -------------------------
"
" This file is intended to be a lighter one intended for being on servers.

" General Settings {{{
" ####################

" No need to be compatible with ancient software
set nocompatible

let mapleader=","

syntax on
filetype plugin indent on

" Use utf8
set encoding=utf-8

" Activate mouse
set mouse=a

" Show title of file we are editing
set title

" No sound thank you very much
set vb

" Fast terminal, give me a smooth graphical experience
set ttyfast

" Pasting is good
set paste

" Only Check final line for file-specific settings
set modelines=1

" }}}
" Visual {{{
" ##########

colorscheme torte

" Show what mode we are in
set showmode
set showcmd
set laststatus=2

" Show the line we're currently on
set cursorline

" Allow vim to handle multiple buffers at the same time
set hidden

" Visual autocomplete for command menu
set wildmenu

" Redraw only when we need to
" Vim loves to redraw the screen during things it probably doesn't need toâ€”like
" in the middle of macros. This tells Vim not to bother redrawing during these
" scenarios, leading to faster macros.
" - http://dougblack.io/words/a-good-vimrc.html
set lazyredraw

" Add line numbers on left side.
set number

" Show current git branch in statusline.
" set statusline=%{fugitive#statusline()}

hi TabLineSel ctermfg=Red

" Keep more lines visible while scrolling down
set scrolloff=5

" }}}
" Spelling {{{
" ############

" }}}
" Search {{{
" ##########

" Make search/replace global by default
set gdefault

" Case-smart search
set ignorecase
set smartcase

" Highlight matching searches as they are found
set incsearch
set hlsearch

" Lets remember more than the last 20 search/commands
set history=1000

" Disable vim's regex for search
" Not sure if I really what this.
nnoremap / /\v
vnoremap / /\v

" Standard tab settings
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set smarttab

" Persistent undo
set undofile
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer relod
" Store undo files in fixed location, not current directory.
" http://stackoverflow.com/a/4331812/1368070
set undodir=~/Projects/dotfiles/vimundo//,/tmp/vimundo/

" Disable backup files. Everything I edit is in version control.
set noswapfile

" Control enter now adds a newline
map <C-Enter> i<Enter><ESC>

" Allow % to swap between if/else/then, xml tags and more
" in addition to ()
runtime macros/matchit.vim

" }}}
" Navigation {{{
" ##############

" Faster go to tab left of current. Holding shift is really inconvenient
nnoremap gr gT

" For easier movement between windows in split screen
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Move by lines as seen in editor rather than as in file
" Extremely useful for formats like json without newlines.
map j gj
map k k

" Disable arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" Disable Ex mode
map Q <NOP>

" Disable K doing man lookups
map K <NOP>

" Set cursor to the position it had when file was closed
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

" Enable backspace
nnoremap <bs> hx
set backspace=start,indent,eol

" }}}
" Language Specific {{{
" #####################

" Correct auto-indentation for C and Python
set cindent

" Set colourcolumn for python (PEP8) and reStructured text files which are
" mainly used for documenting python projects.
autocmd BufNewFile,BufRead *.py,*.rst setlocal colorcolumn=80

" For easy reformatting of lines within the correct number of lines.
" Use gq on a visual selected number of lines
autocmd BufNewFile,BufRead *.py setlocal tw=79

" Tab should indent 2 spaces in html, js, json or stylesheet files
autocmd BufNewFile,BufRead *.html,*.js,*.css,*.scss,*.less,*.json,*.yml setlocal tabstop=2 softtabstop=2 shiftwidth=2

" The unofficial style conventions for git commit messages are that headers
" should be 50 chars or under, followed by an empty line and then a body
" which is wrapped at 70 chars. To help follow these conventions vim colors
" characters on the first line differently after the first 50 chars. This
" adds a colorcolumn at coloumn 70 to help keeping git message bodies within
" the limits.
autocmd BufNewFile,BufRead COMMIT_EDITMSG setlocal colorcolumn=70

" Use <leader>c to save and compile various types of documents
autocmd FileType tex map <buffer> <leader>c :w<CR>:!xelatex -shell-escape %<CR>
autocmd FileType rst map <buffer> <leader>c :w<CR>:!rst2pdf %<CR>

" }}}
" Quality of Life {{{
" ###################

" Common mistyping, saves rage
nnoremap ; :

" Stupid shift key fixes
cmap W w
cmap Wq wq
cmap WQ wq
cmap wQ wq
cmap Q q
cmap Tabnew tabnew
command! -nargs=? -bang -complete=file WQ wq<bang>

" Auto fix simple typos
iabbrev teh the
iabbrev Teh The
iabbrev wiht with

" Highlight extra whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RENAME CURRENT FILE (thanks Gary Bernhardt) & Ben Orenstein
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! RenameFile()
    let old_name = expand('%')
    let new_name = input('New file name: ', expand('%'), 'file')
    if new_name != '' && new_name != old_name
        exec ':saveas ' . new_name
        exec ':silent !rm ' . old_name
        redraw!
    endif
endfunction
map <leader>n :call RenameFile()<cr>

" }}}
" Enable local settings {{{
" #########################

" Load Custom per-directory vim configuration.
" All credit to this SO answer http://stackoverflow.com/a/1889646/1368070
if filereadable(".vim.custom")
    so .vim.custom
endif

" }}}

" vim:foldmethod=marker:foldlevel=0